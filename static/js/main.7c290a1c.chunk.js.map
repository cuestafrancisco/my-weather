{"version":3,"sources":["components/Titles.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Titles","className","Form","onSubmit","this","props","getWeather","type","name","placeholder","React","Component","Weather","city","country","temperature","humidity","description","icon","error","API_KEY","App","state","undefined","e","a","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","setState","main","temp","sys","weather","ReactDOM","render","document","getElementById"],"mappings":"kRAWeA,EATA,kBACd,cAAC,WAAD,UACC,oBAAIC,UAAU,yBAAd,+BCWaC,E,uKAXP,OAEA,cADI,CACJ,QAAMC,SAAUC,KAAKC,MAAMC,WAA3B,UACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,SACjD,uBAAOF,KAAK,OAAOC,KAAK,UAAUC,YAAY,YACxC,wD,GAPWC,IAAMC,WC2CVC,EArCC,SAAAP,GAAK,OACpB,sBAAKJ,UAAW,gBAAhB,UAIEI,EAAMQ,MAAQR,EAAMS,SAAW,oBAAGb,UAAU,eAAb,uBAC9B,uBAAMA,UAAU,iBAAhB,cAAoCI,EAAMQ,KAA1C,KAAoDR,EAAMS,cAI3DT,EAAMU,aAAe,oBAAGd,UAAU,eAAb,0BACpB,uBAAMA,UAAU,iBAAhB,cAAoCI,EAAMU,YAA1C,UAIDV,EAAMW,UAAY,oBAAGf,UAAU,eAAb,uBACjB,uBAAMA,UAAU,iBAAhB,cAAoCI,EAAMW,SAA1C,UAKDX,EAAMY,aAAe,oBAAGhB,UAAU,eAAb,yBACpB,uBAAMA,UAAU,iBAAhB,cAAoCI,EAAMY,YAA1C,UAIDZ,EAAMa,MAAQ,oBAAGjB,UAAU,eAAb,8BACb,uBAAMA,UAAU,iBAAhB,cAAoCI,EAAMa,KAA1C,UAKDb,EAAMc,OAAS,mBAAGlB,UAAU,iBAAb,SAAgCI,EAAMc,YChClDC,EAAU,mCAyFDC,E,4MAnFbC,MAAO,CACLP,iBAAaQ,EACbV,UAAMU,EACNT,aAASS,EACTP,cAAUO,EACVN,iBAAaM,EACbL,UAAMK,EACNJ,WAAOI,G,EAGTjB,W,uCAAa,WAAMkB,GAAN,qBAAAC,EAAA,6DACXD,EAAEE,iBACIb,EAAOW,EAAEG,OAAOC,SAASf,KAAKgB,MAC9Bf,EAAUU,EAAEG,OAAOC,SAASd,QAAQe,MAH/B,SAIYC,MAAK,2DAAsDjB,EAAtD,YAA8DC,EAA9D,qBAAkFM,EAAlF,kBAJjB,cAILW,EAJK,gBAKQA,EAASC,OALjB,OAKLC,EALK,OAQPpB,GAAQC,GAEVoB,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZrB,YAAakB,EAAKI,KAAKC,KACvBzB,KAAMoB,EAAKzB,KACXM,QAASmB,EAAKM,IAAIzB,QAClBE,SAAUiB,EAAKI,KAAKrB,SACpBC,YAAagB,EAAKO,QAAQ,GAAGvB,YAC7BC,KAAMe,EAAKO,QAAQ,GAAGtB,KACtBC,MAAO,MAIT,EAAKiB,SAAS,CACdrB,iBAAaQ,EACbV,UAAMU,EACNT,aAASS,EACTP,cAAUO,EACVN,iBAAaM,EACbL,UAAMK,EACNJ,MAAO,sCA7BE,4C,6GAwCX,OAEQ,aADA,CACA,gBACA,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,CAAMK,WAAYF,KAAKE,aACvB,cAAC,EAAD,CACES,YAAaX,KAAKkB,MAAMP,YACxBC,SAAUZ,KAAKkB,MAAMN,SACrBH,KAAMT,KAAKkB,MAAMT,KACjBC,QAASV,KAAKkB,MAAMR,QACpBG,YAAab,KAAKkB,MAAML,YACxBC,KAAMd,KAAKkB,MAAMJ,KACjBC,MAAOf,KAAKkB,MAAMH,0B,GAvExBT,IAAMC,WCDxB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7c290a1c.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Titles = () => (\n\t<Fragment>\n\t\t<h1 className=\"title-container__title\">My Weather App</h1>\n\n\t</Fragment>\n\t\t\n\t\n);\n\nexport default Titles;\n","import React from \"react\";\n\nclass Form extends React.Component{\n    render(){\n        return(\n            //react atribute onSubmit\n        <form onSubmit={this.props.getWeather}>\n        <input type=\"text\" name=\"city\" placeholder=\"City\"/>\n\t\t<input type=\"text\" name=\"country\" placeholder=\"Country\"/>\n        <button>Get Weather</button>\n\n        </form>\n        )\n    }\n}\nexport default Form;","import React from \"react\";\n\n\n//<p>The Current Weather Conditions for {this.props.city}</p>\n\n//stateless functionals components\n\n\nconst Weather = props => (\n\t<div className= \"weather__info\" >\n    \n        \n\t {\t\n\t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n\t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n\t \t\t<span className=\"weather__value\"> { props.temperature }\t</span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n\t \t\t<span className=\"weather__value\"> { props.humidity } </span>\n\t \t</p> \n\t }\n\n\t { \t\n\t \tprops.description && <p className=\"weather__key\"> Conditions: \n\t \t\t<span className=\"weather__value\"> { props.description } </span>\n\t </p> \n\t }\n\t  { \t\n\t \tprops.icon && <p className=\"weather__key\"> Conditions Icon: \n\t \t\t<span className=\"weather__value\"> { props.icon } </span>\n\t </p> \n\t }\n\n\t { \n\t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n\t }\n\t</div>\n);\n\nexport default Weather;","import React from \"react\"; // tells the file to import the react object from the package.json\n\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\"\n//import Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\n\nconst API_KEY = \"ddaf04454f352d23f54d78cb92a7ea9a\";\n\n\n//initiates component App\n//an instance of App which extends React.Component\nclass App extends React.Component { //initialize state which is an object containing key value pairs\n  state ={\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: undefined,\n    error: undefined\n\n  }\n  getWeather = async(e) =>{\n    e.preventDefault(); //prevents default behavior of component\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch (`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}usa&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    \n    \n    if (city && country){ //if city and contry value are true than data will return\n                          //else false  will return error for undefined values\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp, \n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        icon: data.weather[0].icon,\n        error: \"\"\n      });\n\n    }else{ //else false  will return error for undefined values\n      this.setState({\n      temperature: undefined, \n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      icon: undefined,\n      error: \"please enter the city and country\"\n\n      });\n\n  }\n  }\n  \n  //render method display (returns) the data\n  //return in self closing html tag  <Form/>  <Weather/>  <Titles/>\n             \n  render() {\n    return (\n            //parent element div\n            <div>\n            <div className=\"wrapper\">\n              <div className=\"main\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-xs-5 title-container\">\n                      <Titles />\n                    </div>\n                    \n                    <div className=\"col-xs-7 form-container\">\n                      <Form getWeather={this.getWeather} />\n                      <Weather \n                        temperature={this.state.temperature} \n                        humidity={this.state.humidity}\n                        city={this.state.city}\n                        country={this.state.country}\n                        description={this.state.description}\n                        icon={this.state.icon}\n                        error={this.state.error}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n     \n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport \"./App.css\";\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\n\n\n//method  with first argument component \n//second argument the location where you want to insert your component\n//conects react to my html\nReactDOM.render(<App />, document.getElementById('root')); \n//registerServiceWorker();\n\n"],"sourceRoot":""}